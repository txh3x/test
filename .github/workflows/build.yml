name: Github Action 
run-name: ${{ github.actor }} 
on: [push]

permissions:
  contents: write
  id-token: write

jobs:
  FirstJob:
    name: ${{ github.event_name }} -> Setting Up Machine 
    runs-on: ubuntu-latest

    steps:
      - name: Checkout 
        uses: actions/checkout@v4

      - name: Installing gcc on ${{ runner.os }}
        run: sudo apt install -y gcc

      - name: Checking GCC version
        run: gcc --version

      - name: Checking The Files
        run: ls -la ${{ github.workspace }}

      - name: Cleaning The Previous Files
        run: rm -rf test/bin/

      - name: Compiling Project ${{ github.repository }} at branch ${{ github.ref }}
        run: gcc ${{ github.workspace }}/src/main.c -o ${{ github.workspace }}/bin/main

      - name: Checking The Files
        run: ls -la ${{ github.workspace }}/bin
        
      - name: Creating Artifact File 
        run: |
          mkdir -p ${{ github.workspace }}/.build/artifacts
          touch ${{ github.workspace }}/.build/artifacts/artifacts

      - name: Upload The Code 
        uses: actions/upload-artifact@v4
        with:
          name: artifacts  
          path: ${{ github.workspace }}/.build/artifacts

      - run: echo "This job's status is ${{ job.status }}."

          
  SecondJob: 
    name: New Job
    runs-on: ubuntu-latest
    needs: FirstJob

    steps:
      - name: Checkout 
        uses: actions/checkout@v4
          
      - name: Download Artifacts
        uses: actions/download-artifact@v4
        with:
          name: artifacts  
          path: ${{ github.workspace }}/.build/artifacts

      - name: Display structure of downloaded files
        run: ls -R ${{ github.workspace }}
      
      - run: echo "This job's status is ${{ job.status }}."
      
      - name: Archive Release 
        uses: TheDoctor0/zip-release@main
        with:
          type: 'zip'
          filename: 'release.zip'
          exclusions: '*.git* /*node_modules/* .editorconfig'
      
      - name: Create-Release 
        id: create-new-release
        uses: actions/create-release@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
           tag_name: ${{ github.run_number }}
           release_name: Release ${{ github.run_number }}

      - name: Upload-Release 
        id: upload-release-assest
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create-new-release.outputs.upload_url }} 
          asset_path: ./release.zip
          asset_name: release.zip
          asset_content_type: application/zip


