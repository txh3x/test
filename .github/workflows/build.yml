name: Epic Build Action 
run-name: ${{ github.actor }}'s Build Adventure
on: [push]

permissions:
  contents: write
  pull-requests: write
  repository-projects: write
  
jobs:
  BuildMachine:
    name: Setting Up the Powerhouse
    runs-on: ubuntu-latest

    steps:
      - name: Checkout 
        uses: actions/checkout@v4

      - name: Installing gcc on ${{ runner.os }}
        run: sudo apt install -y gcc

      - name: Checking GCC version
        run: gcc --version

      - name: Checking the Files
        run: ls -la ${{ github.workspace }}

      - name: Cleaning the Previous Files
        run: rm -rf test/bin/

      - name: Compiling Project ${{ github.repository }} at branch ${{ github.ref }}
        run: gcc ${{ github.workspace }}/src/main.c -o ${{ github.workspace }}/bin/main

      - name: Checking the Compiled Files
        run: ls -la ${{ github.workspace }}/bin
        
      - name: Creating Artifact File 
        run: |
          mkdir -p ${{ github.workspace }}/.build/artifacts
          touch ${{ github.workspace }}/.build/artifacts/artifacts

      - name: Upload Artifact 
        uses: actions/upload-artifact@v4
        with:
          name: artifacts  
          path: ${{ github.workspace }}/.build/artifacts

      - run: echo "This job's status is ${{ job.status }}."
      
      - name: Archive Release 
        uses: TheDoctor0/zip-release@main
        with:
          type: 'zip'
          directory: ${{ github.workspace }}/bin/
          filename: app.zip
          exclusions: '*.git* /*node_modules/* .editorconfig'

      - name: Checking the Zipped Files
        run: ls -la ${{ github.workspace }}/bin
          
      - name: Create Release 
        id: create-new-release
        uses: actions/create-release@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.run_number }}
          release_name: Release ${{ github.run_number }}

      - name: Upload Release Asset 
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create-new-release.outputs.upload_url }} 
          asset_path: ${{ github.workspace }}/bin/app.zip
          asset_name: app.zip
          asset_content_type: application/zip

      - run: echo "This job's status is ${{ job.status }}."
      
      - name: Add GitHub Bot as Contributor
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          # Create a branch to add the GitHub bot
          git checkout -b add-github-bot

          # Update CONTRIBUTORS file or similar to add the bot
          echo "GitHub Bot <bot@example.com>" >> CONTRIBUTORS.txt
          git add CONTRIBUTORS.txt
          git commit -m "Add GitHub Bot as contributor"

          # Push the new branch
          git push origin add-github-bot

          # Create the pull request
          curl -X POST -H "Authorization: token $GITHUB_TOKEN" \
               -H "Accept: application/vnd.github.v3+json" \
               https://api.github.com/repos/${{ github.repository }}/pulls \
               -d '{"title":"Add GitHub Bot as Contributor","head":"add-github-bot","base":"main","body":"Adding GitHub Bot as a contributor"}'
  # SecondJob: 
  #   name: New Job
  #   runs-on: ubuntu-latest
  #   needs: FirstJob

  #   steps:
  #     - name: Checkout 
  #       uses: actions/checkout@v4
          
  #     - name: Download Artifacts
  #       uses: actions/download-artifact@v4
  #       with:
  #         name: artifacts  
  #         path: ${{ github.workspace }}/.build/artifacts

  #     - name: Display structure of downloaded files
  #       run: ls -R ${{ github.workspace }}
      
      # - run: echo "This job's status is ${{ job.status }}."
      
      # - name: Archive Release 
      #   uses: TheDoctor0/zip-release@main
      #   with:
      #     type: 'zip'
      #     filename: 'app.zip'
      #     directory: 'bin/main'
      #     exclusions: '*.git* /*node_modules/* .editorconfig'
      
      # - name: Create-Release 
      #   id: create-new-release
      #   uses: actions/create-release@main
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #   with:
      #      tag_name: ${{ github.run_number }}
      #      release_name: Release ${{ github.run_number }}

      # - name: Upload-Release 
      #   id: upload-release-assest
      #   uses: actions/upload-release-asset@v1
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #   with:
      #     upload_url: ${{ steps.create-new-release.outputs.upload_url }} 
      #     asset_path: app.zip
      #     asset_name: app.zip
      #     asset_content_type: application/zip

